apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "insights.fullname" . }}
  labels:
    {{- include "insights.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "insights.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "insights.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-proxy.yaml") . | sha256sum }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9101'
        {{- with .Values.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "insights.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: proxy
          image: haproxy:alpine
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
            - name: metrics
              containerPort: 9101
          volumeMounts:
          - mountPath: /usr/local/etc/haproxy
            readOnly: true
            name: config-proxy
          livenessProbe:
            httpGet:
              path: {{ .Values.proxy.probePath }}
              port: metrics
            initialDelaySeconds: {{ .Values.proxy.probeInitialDelay }}
          readinessProbe:
            httpGet:
              path: {{ .Values.proxy.probePath }}
              port: metrics
            initialDelaySeconds: {{ .Values.proxy.probeInitialDelay }}
      {{- $dot := . }}
      {{- range .Values.conf.proxies }}
        - name: "{{ $dot.Chart.Name }}-{{ .name }}"
          securityContext:
            {{- toYaml $dot.Values.securityContext | nindent 12 }}
          image: "{{ $dot.Values.image.repository }}:{{ $dot.Values.image.tag }}"
          imagePullPolicy: {{ $dot.Values.image.pullPolicy }}
          env:
            - name: AWS_REGION
              value: "{{ $dot.Values.conf.region }}"
            - name: ACCESS_LOG
              value: "{{ $dot.Values.conf.log }}"
            - name: AWS_S3_BUCKET
              value: "{{ .s3Bucket }}"
            - name: STRIP_PATH
              value: "{{ .prefix }}"
            - name: HEALTHCHECK_PATH
              value: "{{ $dot.Values.probePath }}"
            - name: APP_PORT
              value: "{{ .port }}"
          ports:
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "{{ $dot.Values.probePath }}"
              port: {{ .port }}
          readinessProbe:
            httpGet:
              path: "{{ $dot.Values.probePath }}"
              port: {{ .port }}
          resources:
            {{- toYaml $dot.Values.resources | nindent 12 }}
      {{- end }}
      volumes:
      - name: config-proxy
        configMap:
          name: {{ .Release.Name }}-{{ .Chart.Name }}-proxy
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
