{{- include "common-manifests" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scanengine.fullname" . }}
  labels:
    {{- include "scanengine.labels" . | nindent 4 }}
spec:
  {{- if kindIs "int64" .Values.replicaCount }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "scanengine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "scanengine.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- include "common-annotations" . | nindent 8 }}
        {{- with .Values.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- include "common-spec" . | nindent 6 }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "scanengine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: waitfordb
          image: "{{ .Values.waitfordb.image.repository }}:{{ .Values.waitfordb.image.tag }}"
          imagePullPolicy: Always
          command: ['sh', '-c', 'until pg_isready -t 5; do echo WaitingDB; done;']
          env:
          - name: PGHOST
            value: "{{ .Values.db.host | default (include "postgresqlHost" .) }}"
          - name: PGPORT
            value: "{{ .Values.db.port }}"
      containers:
        {{- include "common-containers" . | nindent 8}}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PORT
            value: "{{ .Values.containerPort }}"
          - name: PG_HOST
            value: "{{ .Values.db.host | default (include "postgresqlHost" .) }}"
          - name: PG_NAME
            value: "{{ .Values.db.name }}"
          - name: PG_USER
            value: "{{ .Values.db.user }}"
          - name: PG_PORT
            value: "{{ .Values.db.port }}"
          - name: PG_SSLMODE
            value: "{{ .Values.db.sslMode }}"
          {{- if .Values.db.ca }}
          - name: PG_CA_B64
            value: "{{ .Values.db.ca | b64enc }}"
          {{- end }}
          - name: LOG_LEVEL
            value: "{{ .Values.conf.logLevel }}"
          - name: PERSISTENCE_HOST
            value: "{{ .Values.conf.persistenceHost | default  (include "persistenceHost" .) }}"
          - name: CHECKS_SQS_ARN
            value: "{{ .Values.conf.queueArn }}"
          - name: "SCANS_SNS_ARN"
            value: "{{ .Values.conf.scansSNS.topicArn }}"
          - name: "CHECKS_SNS_ARN"
            value: "{{ .Values.conf.checksSNS.topicArn }}"
          - name: "STREAM_URL"
            value: "{{ .Values.conf.streamUrl | default  (include "streamUrl" .) }}"
          - name: "CHECKS_CREATOR_WORKERS"
            value: "{{ .Values.conf.checkCreator.numOfWorkers }}"
          - name: "CHECKS_CREATOR_PERIOD"
            value: "{{ .Values.conf.checkCreator.period }}"
          - name: "QUEUES_DEFAULT_ARN"
            value: "{{ .Values.conf.queues.default.arn }}"
          - name: "QUEUES_NESSUS_ARN"
            value: "{{ .Values.conf.queues.nessus.arn }}"
          - name: "QUEUES_NESSUS_CHECKTYPES"
            value: {{ .Values.conf.queues.nessus.checktypes | quote }}
        {{- include "common-envs" . | nindent 10 }}
        {{- range $name, $value := .Values.extraEnv }}
          - name: {{ $name }}
            value: {{ $value | quote }}
        {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "scanengine.fullname" . }}
          ports:
            - name: {{ include "common-appPortName" . }}
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- include "common-lifecycle" . | nindent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- include "common-volumes" . | nindent 6}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
