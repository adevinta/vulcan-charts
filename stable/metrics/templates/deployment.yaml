apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "metrics.fullname" . }}
  labels:
    {{- include "metrics.labels" . | nindent 4 }}
spec:
  {{- if .Values.replicaCount }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "metrics.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "metrics.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- with .Values.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "metrics.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: dogstatsd
          image: datadog/docker-dd-agent:latest-dogstatsd
          envFrom:
          - secretRef:
              name: {{ .Release.Name }}-dogstatsd
          ports:
            - containerPort: 8125
              name: dogstatsd
              protocol: UDP
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: LOG_LEVEL
            value: "{{ .Values.conf.logLevel }}"
          - name: SQS_POLLING_INTERVAL
            value: "{{ .Values.conf.sqsPollingInterval }}"
          - name: CHECKS_SQS_QUEUE_ARN
            value: "{{ .Values.conf.checksQueueArn }}"
          - name: SCANS_SQS_QUEUE_ARN
            value: "{{ .Values.conf.scansQueueArn }}"
          - name: RESULTS_HOST
            value: "{{ .Values.conf.resultsHost | default (include "resultsHost" .)}}"
          - name: RESULTS_SCHEME
            value: "{{ .Values.conf.resultsScheme }}"
          - name: DEVHOSE_URL
            value: "{{ .Values.conf.devHoseURL }}"
          - name: LEDGER_SOURCE
            value: "{{ .Values.conf.ledgerSource }}"
          - name: LEDGER_TENANT
            value: "{{ .Values.conf.ledgerTenant }}"
          - name: DOGSTATSD_ADDR
            value: "{{ .Values.conf.dogstatsdAddr | default "localhost:8125" }}"
          - name: REDIS_ADDR
            value: "{{ .Values.conf.redisAddr | default (include "metricsRedisAddr" .)}}"
          {{- if .Values.global.sqs.enabled }}
          - name: CHECKS_SQS_QUEUE_NAME
            value: "{{ .Values.conf.checksQueueName }}"
          - name: SCANS_SQS_QUEUE_NAME
            value: "{{ .Values.conf.scansQueueName }}"
          {{- end }}
        {{- include "infra-envs-minio" . | nindent 10 }}   # Just for credentials
        {{- include "infra-envs-sqs" . | nindent 10 }}
        {{- range $name, $value := .Values.extraEnv }}
          - name: {{ $name }}
            value: {{ $value | quote }}
        {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "metrics.fullname" . }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
