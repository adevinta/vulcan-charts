{{- $c := (dict "comp" .Values.vulndbapi "context" $) -}}
{{- if $c.comp.enabled }}
{{- include "comp-common-manifests" $c }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vulndbapi.fullname" . }}
  labels: {{- include "vulcan.labels" . | nindent 4 }}
    app.kubernetes.io/name: vulndbapi
spec:
  {{- if kindIs "int64" $c.comp.replicaCount }}
  replicas: {{ $c.comp.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{- include "vulcan.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: vulndbapi
  template:
    metadata:
      labels: {{- include "vulcan.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: vulndbapi
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/vulndbapi/secrets.yaml") . | sha256sum }}
        {{- include "comp-common-annotations" $c | nindent 8 }}
        {{- with $c.comp.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- include "comp-common-spec" $c | nindent 6 }}
    {{- with $c.comp.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml $c.comp.podSecurityContext | nindent 8 }}
      initContainers:
        - name: waitfordb
          image: "{{ $c.comp.waitfordb.image.repository }}:{{ $c.comp.waitfordb.image.tag }}"
          imagePullPolicy: Always
          command: ['sh', '-c', 'until pg_isready -t 5; do echo WaitingDB; done;']
          env:
          - name: PGHOST
            value: {{ $c.comp.db.host | default (include "postgresqlHost" .) | quote }}
          - name: PGPORT
            value: {{ $c.comp.db.port | quote }}
      containers:
        {{- include "comp-common-containers" $c | nindent 8}}
        - name: {{ $c.comp.name }}
          securityContext:
            {{- toYaml $c.comp.securityContext | nindent 12 }}
          image: "{{ $c.comp.image.repository }}:{{ $c.comp.image.tag }}"
          imagePullPolicy: {{ $c.comp.image.pullPolicy }}
          env:
          - name: PORT
            value: {{ $c.comp.containerPort | quote }}
          - name: PG_HOST
            value: {{ $c.comp.db.host | default (include "postgresqlHost" .) | quote }}
          - name: PG_NAME
            value: {{ $c.comp.db.name | quote }}
          - name: PG_USER
            value: {{ $c.comp.db.user | quote }}
          - name: PG_PORT
            value: {{ $c.comp.db.port | quote }}
          - name: PG_SSLMODE
            value: {{ $c.comp.db.sslMode | quote }}
          {{- if $c.comp.db.ca }}
          - name: PG_CA_B64
            value: {{ $c.comp.db.ca | b64enc | quote }}
          {{- end }}
          - name: LOG_LEVEL
            value: {{ $c.comp.conf.logLevel | quote }}
        {{- include "comp-common-envs" $c | nindent 10 }}
        {{- range $name, $value := $c.comp.extraEnv }}
          - name: {{ $name }}
            value: {{ $value | quote }}
        {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "vulndbapi.fullname" . }}
          ports:
            - name: {{ include "comp-common-appPortName" $c }}
              containerPort: {{ $c.comp.containerPort }}
              protocol: TCP
          {{- include "comp-common-lifecycle" $c | nindent 10 }}
          resources:
            {{- toYaml $c.comp.resources | nindent 12 }}
      volumes:
      {{- include "comp-common-volumes" $c | nindent 6}}
      {{- with $c.comp.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with $c.comp.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $c.comp.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
