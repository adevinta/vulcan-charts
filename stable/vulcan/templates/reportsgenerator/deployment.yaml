{{- $_ := (set .Values "comp" .Values.reportsgenerator) -}}
{{- if .Values.comp.enabled }}
{{- include "common-manifests" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reportsgenerator.fullname" . }}
  labels: {{- include "vulcan.labels" . | nindent 4 }}
    app.kubernetes.io/name: reportsgenerator
spec:
  {{- if kindIs "int64" .Values.comp.replicaCount }}
  replicas: {{ .Values.comp.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{- include "vulcan.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: reportsgenerator
  template:
    metadata:
      labels: {{- include "vulcan.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: reportsgenerator
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/reportsgenerator/secrets.yaml") . | sha256sum }}
        {{- include "common-annotations" . | nindent 8 }}
        {{- with .Values.comp.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- include "common-spec" . | nindent 6 }}
    {{- with .Values.comp.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.comp.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: waitfordb
          image: "{{ .Values.comp.waitfordb.image.repository }}:{{ .Values.comp.waitfordb.image.tag }}"
          imagePullPolicy: Always
          command: ['sh', '-c', 'until pg_isready -t 5; do echo WaitingDB; done;']
          env:
          - name: PGHOST
            value: {{ .Values.comp.db.host | default (include "postgresqlHost" .) | quote }}
          - name: PGPORT
            value: {{ .Values.comp.db.port | quote }}
      containers:
        {{- include "common-containers" . | nindent 8}}
        - name: {{ .Values.comp.name }}
          {{- with .Values.comp.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.comp.image.repository }}:{{ .Values.comp.image.tag }}"
          imagePullPolicy: {{ .Values.comp.image.pullPolicy }}
          env:
          - name: PORT
            value: {{ .Values.comp.containerPort | quote }}
          - name: PG_HOST
            value: {{ .Values.comp.db.host | default (include "postgresqlHost" .) | quote }}
          - name: PG_NAME
            value: {{ .Values.comp.db.name | quote }}
          - name: PG_USER
            value: {{ .Values.comp.db.user | quote }}
          - name: PG_PORT
            value: {{ .Values.comp.db.port | quote }}
          - name: PG_SSLMODE
            value: {{ .Values.comp.db.sslMode | quote }}
          {{- if .Values.comp.db.ca }}
          - name: PG_CA_B64
            value: {{ .Values.comp.db.ca | b64enc | quote }}
          {{- end }}
          - name: LOG_LEVEL
            value: {{ .Values.comp.conf.logLevel | quote }}
          - name: SQS_QUEUE_ARN
            value: {{ .Values.comp.conf.queueArn | quote }}
          - name: SES_REGION
            value: {{ .Values.comp.conf.ses.region | default (include "region" .) | quote }}
          - name: SES_FROM
            value: {{ .Values.comp.conf.ses.from | quote }}
          - name: SES_CC
            value: {{ .Values.comp.conf.ses.cc | quote }}
          - name: SCAN_EMAIL_SUBJECT
            value: {{ .Values.comp.conf.generators.scan.emailSubject | quote }}
          - name: SCAN_S3_PUBLIC_BUCKET
            value: {{ .Values.comp.conf.generators.scan.publicBucket | quote }}
          - name: SCAN_S3_PRIVATE_BUCKET
            value: {{ .Values.comp.conf.generators.scan.privateBucket | quote }}
          - name: SCAN_GA_ID
            value: {{ .Values.comp.conf.generators.scan.gaId | quote }}
          - name: SCAN_COMPANY_NAME
            value: {{ .Values.comp.conf.generators.scan.contact.companyName | quote }}
          - name: SCAN_SUPPORT_EMAIL
            value: {{ .Values.comp.conf.generators.scan.contact.supportEmail | quote }}
          - name: SCAN_CONTACT_EMAIL
            value: {{ .Values.comp.conf.generators.scan.contact.email | quote }}
          - name: SCAN_CONTACT_CHANNEL
            value: {{ .Values.comp.conf.generators.scan.contact.slackChannel | quote }}
          - name: SCAN_CONTACT_JIRA
            value: {{ .Values.comp.conf.generators.scan.contact.jira | quote }}
          - name: SCAN_DOCS_API_LINK
            value: {{ .Values.comp.conf.generators.scan.docs.apiDocLink | quote }}
          - name: SCAN_DOCS_ROADMAP_LINK
            value: {{ .Values.comp.conf.generators.scan.docs.roadmapLink | quote }}
          - name: PERSISTENCE_ENDPOINT  # We keep this PERSISTENCE variable for compatibility
            value: {{ .Values.comp.conf.scanengineUrl | default (include "scanengine.url" .) | quote }}
          - name: RESULTS_ENDPOINT
            value: {{ .Values.comp.conf.resultsUrl | default (include "results.url" .) | quote }}
          - name: SCAN_PROXY_ENDPOINT
            value: {{ .Values.comp.conf.generators.scan.proxyEndpoint | quote }}
          - name: VULCAN_UI
            value: {{ .Values.comp.conf.generators.scan.vulcanUi | quote }}
          - name: SCAN_VIEW_REPORT
            value: {{ printf "%sapi/v1/report?team_id=%s&scan_id=%s" .Values.comp.conf.generators.scan.vulcanUi "%s" "%s" | quote }}
          {{- if .Values.comp.conf.generators.scan.redirectUrl }}
          - name: SCAN_REDIRECT_URL
            value: {{ .Values.comp.conf.generators.scan.redirectUrl | quote }}
          {{- end }}
          - name: LIVEREPORT_EMAIL_SUBJECT
            value: {{ .Values.comp.conf.generators.livereport.emailSubject | quote }}
        {{- include "common-envs" . | nindent 10 }}
        {{- range $name, $value := .Values.comp.extraEnv }}
          - name: {{ $name }}
            value: {{ $value | quote }}
        {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "reportsgenerator.fullname" . }}
          ports:
            - name: {{ include "common-appPortName" . }}
              containerPort: {{ .Values.comp.containerPort }}
              protocol: TCP
          {{- include "common-lifecycle" . | nindent 10 }}
          {{- with .Values.comp.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- include "common-volumes" . | nindent 6}}
      {{- with .Values.comp.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.comp.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.comp.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
