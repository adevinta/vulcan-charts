{{- $_ := (set .Values "comp" .Values.insights) -}}
{{- if .Values.comp.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "insights.fullname" . }}
  labels: {{- include "vulcan.labels" . | nindent 4 }}
    app.kubernetes.io/name: insights
spec:
  {{- if kindIs "int64" .Values.comp.replicaCount }}
  replicas: {{ .Values.comp.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{- include "vulcan.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: insights
  template:
    metadata:
      labels: {{- include "vulcan.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: insights
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/insights/config-proxy.yaml") . | sha256sum }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: '{{ .Values.comp.proxy.metricsPort }}'
        {{- with .Values.comp.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- include "common-spec" . | nindent 6 }}
    {{- with .Values.comp.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.comp.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        {{- include "common-containers" . | nindent 8}}
      {{- $dot := . }}
      {{- range $i, $p := .Values.comp.conf.proxies }}
        {{- $port := add $dot.Values.comp.containerPort $i }}
        - name: "insights-{{ $p.name }}"
          {{- with $dot.Values.comp.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ $dot.Values.comp.image.repository }}:{{ $dot.Values.comp.image.tag }}"
          imagePullPolicy: {{ $dot.Values.comp.image.pullPolicy }}
          env:
            - name: AWS_REGION
              value: {{ $dot.Values.comp.conf.region | default (include "region" $dot ) | quote }}
            - name: ACCESS_LOG
              value: {{ $dot.Values.comp.conf.log | quote }}
            - name: AWS_S3_BUCKET
              value: {{ $p.s3Bucket | quote }}
            - name: STRIP_PATH
              value: {{ $p.prefix | quote }}
            - name: HEALTHCHECK_PATH
              value: "/healthcheck"
            - name: APP_PORT
              value: {{ $port | quote }}
            {{- if $dot.Values.minio.enabled }}
            - name: AWS_API_ENDPOINT
              value: {{ include "minio.url" $dot | quote }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ printf "%s-minio" $dot.Release.Name  }}"
                  key: access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ printf "%s-minio" $dot.Release.Name  }}"
                  key: secret-key
            {{- end }}
          ports:
            - name: {{ $p.name }}
              containerPort: {{ $port }}
              protocol: TCP
          {{- if or $dot.Values.comp.lifecycle.preStopCommand $dot.Values.comp.lifecycle.preStopSleep }}
          lifecycle:
            preStop:
              exec:
          {{- if $dot.Values.comp.lifecycle.preStopCommand }}
                command: {{ $dot.Values.comp.lifecycle.preStopCommand }}
          {{- else }}
                command: ["/bin/sh","-c","sleep {{ $dot.Values.comp.lifecycle.preStopSleep }};"]
          {{- end -}}
          {{- end -}}
          {{- if and $dot.Values.comp.readinessProbe.enabled $dot.Values.comp.readinessProbe.path }}
          livenessProbe:
            httpGet:
              path: {{ $dot.Values.comp.livenessProbe.path }}
              port: {{ $port }}
            initialDelaySeconds: {{ $dot.Values.comp.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $dot.Values.comp.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $dot.Values.comp.livenessProbe.timeoutSeconds }}
            successThreshold: {{ $dot.Values.comp.livenessProbe.successThreshold }}
            failureThreshold: {{ $dot.Values.comp.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if and $dot.Values.comp.readinessProbe.enabled  $dot.Values.comp.readinessProbe.path }}
          readinessProbe:
            httpGet:
              path: {{ $dot.Values.comp.readinessProbe.path }}
              port: {{ $port }}
            initialDelaySeconds: {{ $dot.Values.comp.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $dot.Values.comp.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $dot.Values.comp.readinessProbe.timeoutSeconds }}
            successThreshold: {{ $dot.Values.comp.readinessProbe.successThreshold }}
            failureThreshold: {{ $dot.Values.comp.readinessProbe.failureThreshold }}
          {{- end }}
          {{- with $dot.Values.comp.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      volumes:
      {{- include "common-volumes" . | nindent 6}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.comp.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.comp.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
