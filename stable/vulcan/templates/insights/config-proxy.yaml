{{- $c := (dict "comp" .Values.insights "context" $) -}}
{{- if and $c.comp.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "insights.fullname" . }}-proxy
  labels: {{- include "vulcan.labels" . | nindent 4 }}
    app.kubernetes.io/component: insights
data:
  haproxy.cfg: |
    global
      daemon
      maxconn {{ $c.comp.proxy.maxconn | default 64 }}
      log stdout format raw daemon

    defaults
      mode http
      timeout connect {{ $c.comp.proxy.timeoutConnect | default "5s" }}
      timeout client {{ $c.comp.proxy.timeoutClient | default "25s" }}
      timeout server {{ $c.comp.proxy.timeoutServer | default "25s" }}
      timeout tunnel {{ $c.comp.proxy.timeoutTunnel | default "3600s" }}
      option  http-server-close

    {{- if $c.comp.proxy.cache.enabled }}
    cache small
      total-max-size 64     # mb
      max-age 240           # seconds
    {{- end }}

    frontend http
      bind *:{{ $c.comp.proxy.port | default 80 }}
      log global
      option httplog clf
    {{- if $c.comp.proxy.cache.enabled }}
      http-request cache-use small
      http-response cache-store small
    {{- end }}
      http-request capture req.hdr(Host) len 50
      http-request capture req.hdr(User-Agent) len 100
      {{- range $c.comp.conf.proxies }}
      {{- if .prefix }}
      use_backend {{ .name }} if { path -i -m beg {{ .prefix}} }
      {{- else }}
      default_backend {{ .name }}
      {{- end }}
      {{- end }}

    {{- $dot := . }}
    {{- range $i, $p := $c.comp.conf.proxies }}
    {{- $port := add $dot $c.comp.containerPort $i }}

    backend {{ $p.name }}
      server app 127.0.0.1:{{ $port }}
    {{- end }}

    frontend stats
      bind *:{{ $c.comp.proxy.metricsPort }}
      option http-use-htx
      http-request use-service prometheus-exporter if { path /metrics }
      monitor-uri {{ $c.comp.proxy.probePath }}
{{- end }}
