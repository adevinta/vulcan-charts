{{- if .Values.agent.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vulcan.fullname" . }}-agent
  labels:
    {{- include "vulcan.labels" . | nindent 4 }}
    app.kubernetes.io/component: agent
spec:
  selector:
    matchLabels:
      {{- include "vulcan.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        {{- include "vulcan.labels" . | nindent 8 }}
        app.kubernetes.io/component: agent
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/agent-secrets.yaml") . | sha256sum }}
        {{- with .Values.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "vulcan.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag }}"
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
#          command: ["tail","-f","/dev/null"]
          env:
          - name: REGION
            value: "{{ .Values.global.region }}"
          - name: JOBQUEUE_ID
            value: "{{ .Values.agent.conf.jobQueueId }}"
          - name: LOG_LEVEL
            value: "{{ .Values.agent.conf.logLevel }}"
          - name: CONCURRENT_JOBS
            value: "{{ .Values.agent.conf.concurrentJobs }}"
          - name: PERSISTENCE_ENDPOINT
            value: "{{ .Values.agent.conf.persistenceEndpoint  | default  (include "persistenceEndpoint" .)}}/v1/"
          - name: RESULTS_ENDPOINT
            value: "{{ .Values.agent.conf.resultsEndpoint | default  (include "resultsEndpoint" .)}}/v1/"
          - name: STREAM_ENDPOINT
            value: "ws://{{ .Values.agent.conf.streamEndpoint | default  (include "streamHost" .)}}/stream"
          - name: PORT
            value: "{{ .Values.agent.containerPort }}"
          - name: CHECK_LOG_LEVEL
            value: "{{ .Values.agent.conf.checkLogLevel }}"
          - name: NESSUS_ENDPOINT
            value: "{{ .Values.agent.conf.nessusEndpoint }}"
          - name: GATEWAY_ENDPOINT
            value: "{{ .Values.agent.conf.gatewayEndpoint }}"
        {{ include "infra-envs-sqs" . | nindent 10 }}
        {{ include "infra-envs-sns" . | nindent 10 }}
        {{ include "infra-envs-minio" . | nindent 10 }}
        {{- range $name, $value := .Values.agent.extraEnv }}
          - name: {{ $name }}
            value: {{ $value | quote }}
        {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "vulcan.fullname" . }}-agent
          ports:
            - name: http
              containerPort: {{ .Values.agent.containerPort}}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
