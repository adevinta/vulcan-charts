# Default values for vulcan.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Those values are useless here, could be defined in the dependant charts.
proxy:
  enabled: false
  port: 80
  probePath: /healthz
  probeInitialDelay: 2

postgresql:
  enabled: false  # Disabled by default.
  postgresqlUsername: postgres
  postgresqlPassword: TBD
  postgresqlDatabase: persistence
  initdbScripts:
    initial-dbs.sql: |
      CREATE DATABASE api;
      CREATE DATABASE scanengine;
  master:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9187"
  resources:
    requests:
      cpu: "0"
      memory: "0"
  persistence:
    enabled: false
  metrics:
    enabled: true

defaults:
  db: &db     # Disabled by default. Those parameters must match postgresql.* if enabled
    internal: false
    user: postgres
    password: TBD
    sslMode: disable

results:
  conf:
    bucketReports: reports
    bucketLogs: logs

persistence:
  db:
    <<: *db
    host: postgresql
    name: persistence
  conf:
    s3Scans: scans

  sns:
    internal: false
    internalEndpoint: http://{ReleaseName}-aws/
    externalEndpoint:

  sqs:
    internal: false
    internalEndpoint: http://{ReleaseName}-aws/
    externalEndpoint:

  conf:
    region: eu-west-1
    snsTopic: arn:aws:sns:eu-west-1:012345678900:VulcanK8SChecks
    nessusCheckQueue: VulcanK8SChecksTenable

stream:
  db:
    <<: *db
    host: postgresql
    name: persistence

scanengine:
  db:
    <<: *db
    host: postgresql
    name: scanengine

api:
  db:
    <<: *db
    host: postgresql
    name: api
  conf:
    bucketReports: reports
    bucketLogs: logs
    s3PrivateBucket: insights
    s3PublicBucket: public-insights

crontinuous:
  conf:
    crontinuousBucket: crontinuous

insights:
  conf:
    proxies:
      - name: private
        s3Bucket: insights
        prefix: ""
      - name: public
        s3Bucket: public-insights
        prefix: "/public"

aws:
  enabled: false
  config:
    goaws.yaml: |
      Local:
        Host: {{ .Release.Name }}-aws
        Port: 4100
        Region: eu-west-1
        AccountId: "012345678900"
        LogToFile: false
        QueueAttributeDefaults:
          VisibilityTimeout: 30
          ReceiveMessageWaitTimeSeconds: 0
        Queues:
          - Name: VulcanK8SAPIScans
          - Name: VulcanK8SChecksGeneric
          - Name: VulcanK8SChecksTenable
          - Name: VulcanK8SMetricsChecks
          - Name: VulcanK8SMetricsScans
          - Name: VulcanK8SScanEngineChecks
        Topics:
          - Name: VulcanK8SChecks
            Subscriptions:
              - QueueName: VulcanK8SMetricsChecks
                Raw: true
              - QueueName: VulcanK8SScanEngineChecks
                Raw: true
                #FilterPolicy: '{"foo": ["bar"]}'
          - Name: VulcanK8SScans
            Subscriptions:
              - QueueName: VulcanK8SAPIScans
                Raw: true
              - QueueName: VulcanK8SMetricsScans
                Raw: true
        RandomLatency:
          Min: 0
          Max: 0

s3:
  enabled: false
  buckets:
    - name: reports
      policy: none
      purge: false
    - name: logs
      policy: none
      purge: false
    - name: scans
      policy: none
      purge: false
    - name: insights
      policy: none
      purge: false
    - name: public-insights
      policy: none
      purge: false
    - name: crontinuous
      policy: none
      purge: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
