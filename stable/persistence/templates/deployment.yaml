{{- if .Values.proxy.enabled }}
{{ include "proxy-config-map" . }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "persistence.fullname" . }}
  labels:
{{ include "persistence.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "persistence.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "persistence.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.proxy.enabled }}
        checksum/config-proxy: {{ include "proxy-config-map" . | sha256sum }}
        {{ include "proxy-annotations" . | nindent 8 }}
        {{- end }}
        {{- with .Values.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "persistence.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: waitfordb
          image: postgres:9.6.16-alpine
          command: ['sh', '-c', 'until pg_isready -h $PG_HOST -p $PG_PORT;
          do echo waiting for database; sleep 2; done;']
          env:
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "persistence.fullname" . }}
                  key: POSTGRES_HOST
            - name: PG_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "persistence.fullname" . }}
                  key: POSTGRES_PORT
      containers:
        {{- if .Values.proxy.enabled }}
        {{ include "proxy-container" . | nindent 8}}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PORT
            value: "{{ .Values.containerPort }}"
          envFrom:
          - configMapRef:
              name: {{ include "persistence.fullname" . }}
          - secretRef:
              name: {{ include "persistence.fullname" . }}
          ports:
            - name: {{ ternary "app" "http" .Values.proxy.enabled }}
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.probePath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: {{ .Values.probeInitialDelay }}
            timeoutSeconds: {{ .Values.probeTimeout }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probePath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: {{ .Values.probeInitialDelay }}
            timeoutSeconds: {{ .Values.probeTimeout }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.proxy.enabled }}
      {{ include "proxy-volumes" . | nindent 6}}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
