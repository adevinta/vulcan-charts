{{- if .Values.proxy.enabled }}
{{ include "proxy-config-map" . }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "persistence.fullname" . }}
  labels:
{{ include "persistence.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "persistence.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "persistence.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.proxy.enabled }}
        checksum/config-proxy: {{ include "proxy-config-map" . | sha256sum }}
        {{ include "proxy-annotations" . | nindent 8 }}
        {{- end }}
        {{- with .Values.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "persistence.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: waitfordb
          image: postgres:9.6.16-alpine
          command: ['sh', '-c', 'until pg_isready -t 5; do echo Waiting; done;']
          env:
          - name: PGHOST
            value: "{{ .Values.db.host }}"
          - name: PGPORT
            value: "{{ .Values.db.port }}"
      containers:
        {{- if .Values.proxy.enabled }}
        {{ include "proxy-container" . | nindent 8}}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PORT
            value: "{{ .Values.containerPort }}"
          - name: POSTGRES_DB
            value: "{{ .Values.db.name }}"
          - name: POSTGRES_HOST
            value: "{{ .Values.db.host }}"
          - name: POSTGRES_PORT
            value: "{{ .Values.db.port }}"
          - name: POSTGRES_USER
            value: "{{ .Values.db.user }}"
          - name: POSTGRES_SSLMODE
            value: "{{ .Values.db.sslMode }}"
          {{- if .Values.db.ca }}
          - name: POSTGRES_CA_B64
            value: "{{ .Values.db.ca | b64enc }}"
          {{- end }}
          - name: STREAM_CHANNEL
            value: "{{ .Values.conf.channel }}"
          - name: REGION
            value: "{{ .Values.conf.region }}"
          - name: SCANS_BUCKET
            value: "{{ .Values.conf.s3Scans }}"
          - name: SNS_TOPIC_ARN
            value: "{{ .Values.conf.snsTopic }}"
          - name: AWS_REGION
            value: "{{ .Values.conf.region }}"
          - name: NESSUS_CHECK_QUEUE
            value: "{{ .Values.conf.nessusCheckQueue }}"
          - name: RAILS_MAX_THREADS
            value: "{{ .Values.conf.railsMaxThreads }}"
        {{- if .Values.extraEnv }}
          {{ toYaml .Values.extraEnv | indent 10 }}
        {{- end }}
          envFrom:
          - secretRef:
              name: {{ include "persistence.fullname" . }}
          ports:
            - name: {{ ternary "app" "http" .Values.proxy.enabled }}
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.probePath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: {{ .Values.probeInitialDelay }}
            timeoutSeconds: {{ .Values.probeTimeout }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probePath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: {{ .Values.probeInitialDelay }}
            timeoutSeconds: {{ .Values.probeTimeout }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.proxy.enabled }}
      {{ include "proxy-volumes" . | nindent 6}}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
